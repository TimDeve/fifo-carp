(load "https://github.com/carpentry-org/sockets@edbb459fb909c51be907abca753a3ae8ea80f242")
(relative-include "./fifo-carp.h")

(register-type FifoSocket)
(defmodule FifoSocket
  (register init (Fn [] FifoSocket) "fifo_socket_new")
  (register delete (Fn [FifoSocket] ()) "fifo_socket_delete")
  (register push (Fn [(Ref FifoSocket) Socket] ()) "fifo_socket_push")
  (register is-empty? (Fn [(Ref FifoSocket)] Bool) "fifo_socket_is_empty")
  (register pop-c (Fn [(Ref FifoSocket)] Socket) "fifo_socket_pop")
  (defn pop [queue]
   (if (is-empty? queue)
    (Maybe.Nothing)
    (Maybe.Just (pop-c queue)))))

(register-type FifoInt)
(defmodule FifoInt
  (register init (Fn [] FifoInt) "fifo_int_new")
  (register delete (Fn [FifoInt] ()) "fifo_int_delete")
  (register push (Fn [(Ref FifoInt) Int] ()) "fifo_int_push")
  (register is-empty? (Fn [(Ref FifoInt)] Bool) "fifo_int_is_empty")
  (register pop-c (Fn [(Ref FifoInt)] Int) "fifo_int_pop")
  (defn pop [queue]
   (if (is-empty? queue)
    (Maybe.Nothing)
    (Maybe.Just (pop-c queue)))))
